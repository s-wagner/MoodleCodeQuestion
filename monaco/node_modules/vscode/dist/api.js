import './polyfill.js';
import './missing-services.js';
import './services2.js';
export { B as Breakpoint, C as CallHierarchyIncomingCall, a as CallHierarchyItem, b as CallHierarchyOutgoingCall, c as CancellationError, d as CancellationTokenSource, e as CodeAction, f as CodeActionKind, g as CodeActionTriggerKind, h as CodeLens, i as Color, j as ColorInformation, k as ColorPresentation, l as ColorThemeKind, m as CommentMode, n as CommentThreadCollapsibleState, o as CommentThreadState, p as CompletionItem, q as CompletionItemKind, r as CompletionItemTag, s as CompletionList, t as CompletionTriggerKind, u as ConfigurationTarget, v as CustomExecution, D as DEFAULT_EXTENSION, w as DataTransfer, x as DataTransferItem, y as DebugAdapterExecutable, z as DebugAdapterInlineImplementation, A as DebugAdapterNamedPipeServer, E as DebugAdapterServer, F as DebugConfigurationProviderTriggerKind, G as DebugConsoleMode, H as DecorationRangeBehavior, I as Diagnostic, J as DiagnosticRelatedInformation, K as DiagnosticSeverity, L as DiagnosticTag, M as Disposable, N as DocumentDropEdit, O as DocumentHighlight, P as DocumentHighlightKind, Q as DocumentLink, R as DocumentSymbol, S as EndOfLine, T as EnvironmentVariableMutatorType, U as EvaluatableExpression, V as EventEmitter, W as ExtensionKind, X as ExtensionMode, Y as FileChangeType, Z as FileDecoration, _ as FilePermission, $ as FileSystemError, a0 as FileType, a1 as FoldingRange, a2 as FoldingRangeKind, a3 as FunctionBreakpoint, a4 as Hover, a5 as IndentAction, a6 as InlayHint, a7 as InlayHintKind, a8 as InlayHintLabelPart, a9 as InlineCompletionItem, aa as InlineCompletionList, ab as InlineCompletionTriggerKind, ac as InlineValueEvaluatableExpression, ad as InlineValueText, ae as InlineValueVariableLookup, af as InputBoxValidationSeverity, ag as LanguageStatusSeverity, ah as LinkedEditingRanges, ai as Location, aj as LogLevel, ak as MarkdownString, al as NotebookCellData, am as NotebookCellKind, an as NotebookCellOutput, ao as NotebookCellOutputItem, ap as NotebookCellStatusBarAlignment, aq as NotebookCellStatusBarItem, ar as NotebookControllerAffinity, as as NotebookData, at as NotebookEdit, au as NotebookEditorRevealType, av as NotebookRange, aw as OverviewRulerLane, ax as ParameterInformation, ay as Position, az as ProcessExecution, aA as ProgressLocation, aB as QuickInputButtons, aC as QuickPickItemKind, aD as Range, aE as RelativePattern, aF as Selection, aG as SelectionRange, aH as SemanticTokens, aI as SemanticTokensBuilder, aJ as SemanticTokensEdit, aK as SemanticTokensEdits, aL as SemanticTokensLegend, aM as ShellExecution, aN as ShellQuoting, aO as SignatureHelp, aP as SignatureHelpTriggerKind, aQ as SignatureInformation, aR as SnippetString, aS as SnippetTextEdit, aT as SourceBreakpoint, aU as StatusBarAlignment, aV as SymbolInformation, aW as SymbolKind, aX as SymbolTag, aY as TabInputCustom, aZ as TabInputNotebook, a_ as TabInputNotebookDiff, a$ as TabInputTerminal, b0 as TabInputText, b1 as TabInputTextDiff, b2 as TabInputWebview, b3 as Task, b4 as TaskGroup, b5 as TaskPanelKind, b6 as TaskRevealKind, b7 as TaskScope, b8 as TelemetryTrustedValue, b9 as TerminalExitReason, ba as TerminalLink, bb as TerminalLocation, bc as TerminalProfile, bd as TestMessage, be as TestRunProfileKind, bf as TestRunRequest, bg as TestTag, bh as TextDocumentChangeReason, bi as TextDocumentSaveReason, bj as TextEdit, bk as TextEditorCursorStyle, bl as TextEditorLineNumbersStyle, bm as TextEditorRevealType, bn as TextEditorSelectionChangeKind, bo as ThemeColor, bp as ThemeIcon, bq as TreeItem, br as TreeItemCollapsibleState, bs as TypeHierarchyItem, bt as UIKind, bu as Uri, bv as ViewColumn, bw as WorkspaceEdit, bx as authentication, by as commands, bz as comments, bA as debug, bB as env, bC as extensions, bD as l10n, bE as languages, bF as notebooks, bG as scm, bH as tasks, bI as tests, bJ as version, bK as window, bL as workspace } from './api2.js';
